name: Deployment

on:
  push:
    branches:
      - '**'
    tags:
      - version/*

jobs:
  validation:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Add MSBuild to Path
        uses: microsoft/setup-msbuild@v1.0.2
      
      - name: Restore solution
        shell: cmd
        run: dotnet restore

      - name: Test solution
        shell: cmd
        run: dotnet test
  
  construction:
    runs-on: windows-2019
    # needs: validation
    env:
      BUILD_FILE: build
      ARTIFACT_DIRECTORY: ARTIFACTS
      CONFIGURATION: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Add MSBuild to Path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build artifacts
        shell: cmd
        run : |
          dotnet msbuild %GITHUB_WORKSPACE%/%BUILD_FILE%.xml -p:^
          InputPath=%GITHUB_WORKSPACE%^
          ;OutputPath=%GITHUB_WORKSPACE%/%ARTIFACT_DIRECTORY%^
          ;Configuration=%CONFIGURATION%^
            
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/${{ env.ARTIFACT_DIRECTORY }}
          name: ${{ github.workflow }}

  publication:
    runs-on: ubuntu-latest
    needs: construction
    env:
      ARTIFACT_DIRECTORY: ARTIFACTS
      ZIP_FILE: output
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/${{ env.ARTIFACT_DIRECTORY }}
          name: ${{ github.workflow }}

      - name: Arrange output file
        shell: bash
        run : |
          rm $GITHUB_WORKSPACE/$ARTIFACT_DIRECTORY/*.{pdb,deps.json}
          zip -r $ZIP_FILE $ARTIFACT_DIRECTORY
          ls -a $GITHUB_WORKSPACE/$ARTIFACT_DIRECTORY
      
      - name: Configure information
        shell: bash
        run : echo ${GITHUB_REPOSITORY#*/} >> $GITHUB_ENV
      
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1.0.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      
      # - name: Configure information
      #   shell: bash
      #   run : |
      #     echo $GITHUB_REPOSITORY |
      #     set REPOSITORY_NAME=%:${{ github.repository_owner }}/=%
      #     echo REPOSITORY_NAME=%REPOSITORY_NAME% >> $GITHUB_ENV

      # - name: Upload assets
      #   id: upload-asset
      #   uses: actions/upload-release-asset@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ github.workspace }}/${{ env.ARTIFACT_DIRECTORY }}/${{ github.workflow }}.zip
      #     asset_name: ${{ env.REPOSITORY_NAME }}_${{  }}.zip
      #     asset_content_type: application/zip
